/*
цикл - инструкция для многократного выполнения блока

Переводы слов с англ.:
while - пока
cycle - цикл
*/
let i = 0;

while (i < 10) {
  console.log(i);
  i++;
}

console.log("После всего", i);

console.clear();
// Напишите цикл, который выводит числа от 10 до 1
{
  let i = 10;
  while (i > 0) {
    console.log("Зад_1", i);
    i = i - 1;
  }
}

// Дана константа STEPS равная 10. Напишите скрипт,
// который будет выводить строки:
// шаг №1
// шаг №2
// шаг №3
// шаг №4
// шаг №5
// шаг №6
// шаг №7
// шаг №8
// шаг №9
// шаг №10

{
  const steps = 10;
  let i = 1;
  while (i <= steps) {
    console.log("Зад_2", "шаг №", i);
    i++;
  }
}

// Сгенерируйте названия файлов по образцу при помощи цикла while.
// Образец:
// "01-image.png"
// "02-image.png"
// "03-image.png"
// ...
// "10-image.png"
// Выведите результат [в консоль].
{
  let i = 1;
  let n = "-image.png";
  function normalizeValue(value) {
    return value.toString().length > 1 ? value : `0${value}`; // функция дописывает ноль если длина строки 1 
}
  while (i <= 10) {
    numb = normalizeValue(i) + n; // применяем функцию к i и суммируем
    console.log("Зад_3", numb);
    i++;
  }
}

// Выведите таблицу умножения числа 5 на другие числа.
// Образец:
// "5 * 0 = 0"
// "5 * 1 = 5"
// "5 * 2 = 10"
// "5 * 3 = 15"
// "5 * 4 = 20"
// "5 * 5 = 25"
// "5 * 6 = 30"
// "5 * 7 = 35"
// "5 * 8 = 40"
// "5 * 9 = 45"
// "5 * 10 = 50"

// Дана константа STR='Глокая куздра'. Посмотреть количество символов в строке
// можно через обращение к STR.length, а обратиться к первому символу через STR[0]
// Напишите цикл while, который будет выводить по одной букве строки
// Образец:
// Г
// л
// о
// к
// а
// я
//
// к
// у
// з
// д
// р
// а

// Дана переменная data=[234,567,123,819]. Узнать сколько элементов в массива можно
// через обращение data.length, а обратиться к начальному элементу через data[0]
// Напишите цикл, который выведете по одному элементы массива
// Например:
// 234
// 567
// 123
// 819
