/*
Кратко
методы массивов - функциональный свойства (функции) массивов, помогающие
выполнять работу с массивами
*/
let arr;

[4, 7, 10].concat([10, 20]); //[4,7,10,10,20] возвращает новый массив
[4, 7, 10].join('---'); // '4---7---10' возвращает строку

arr = [4, 7, 10];
arr.pop(); //10 - удаляет последний элемент и возвращает его
console.log(arr); //[4,7]

arr = [4, 7, 10];
arr.push(100, 200); //5 - добавляет элементы справа и возвращает длину массива
console.log(arr); //[4,7,19,100,200]

arr = [4, 7, 10];
arr.shift(); //4 - удаляет первый элемент и возвращает его
console.log(arr); //[7,10]

arr = [4, 7, 10];
arr.unshift(400, 500); //5 -  добавляет элементы справа и возвращает длину
console.log(arr); // [400, 500, 4,7,10]

['Катя', 'Ян', 'Анна'].sort(); //['Анна', 'Катя', 'Ян'] - сортирует по строкам
[1, 5, 34, 7, 2].sort(); // [1, 2, 34, 5, 7] - сортирует по строкам


arr = [1, 5, 34, 7, 2];
function my(a, b) {
    if (a > b) return 1;
    return -1;
}
arr.sort(my); // сортирует по возрастанию
arr.sort(a => a % 2 ? 1 : -1); // сортирует по чётности



// Жесть, смотреть до конца!
// https://www.youtube.com/watch?v=8JsteOQxJZc


[4, 7, 10].map((item, index, array) => {
  console.log(item, index, array);
  return item * 2;
}); // [8, 14, 20] - возвращает новый массив на основе коллбека


[4, 7, 10].forEach((item, index) => {
    console.log(item, index);
}); // вызывает коллбека для каждого элемента массива


[4, 7, 10].filter((item) => item % 2); // фильтрует массив на основе коллбека
[4, 7, 10].filter((item) => !(item % 2)); // получаем массив чётных значений

//every - проверяет выполнение коллбека для каждого элемента
[4, 7, 10].every((item) => typeof item == "number"); //true
[4, 7, 'q'].every((item) => typeof item == "string"); //false

//some - проверяет выполнение коллбека хотя бы к одному элементу
[4, 7, 10].some((item) => item % 2); // true
[4, 7, 10].some((item) => item % 2); //true


[1, 2, 3].reverse(); // [3, 2, 1] - переворачивает массив

// slice(from, to) - возвращает подмассив, не включает эл-т с индексом to
['q', 'w', 'e', 'r', 't', 'y'].slice(); //['q', 'w', 'e', 'r', 't', 'y']
['q', 'w', 'e', 'r', 't', 'y'].slice(2); //['e', 'r', 't', 'y']
['q', 'w', 'e', 'r', 't', 'y'].slice(2, 4); //['e', 'r']
['q', 'w', 'e', 'r', 't', 'y'].slice(2, -2); //['e', 'r']
['q', 'w', 'e', 'r', 't', 'y'].slice(-4, -5); //[]

[4, 7, 10].find( item => item % 2 ); // 7 - возвращает первый попавшийся элемент

[4, 7, 10].findIndex( item => item % 2 ); // 1 - возвращает индекс первого найденного элемента

[4, 7, 10].includes(100); // false - возвращает признак вхождения в массив
[4, 7, 10].includes(4); // true

// Остальные методы
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array#instance_methods